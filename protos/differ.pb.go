// Code generated by protoc-gen-go. DO NOT EDIT.
// source: differ.proto

package differ_pb2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Db_DbType int32

const (
	Db_ORACLE     Db_DbType = 0
	Db_POSTGRESQL Db_DbType = 1
	Db_SQLSERVER  Db_DbType = 2
	Db_MYSQL      Db_DbType = 3
)

var Db_DbType_name = map[int32]string{
	0: "ORACLE",
	1: "POSTGRESQL",
	2: "SQLSERVER",
	3: "MYSQL",
}

var Db_DbType_value = map[string]int32{
	"ORACLE":     0,
	"POSTGRESQL": 1,
	"SQLSERVER":  2,
	"MYSQL":      3,
}

func (x Db_DbType) Enum() *Db_DbType {
	p := new(Db_DbType)
	*p = x
	return p
}

func (x Db_DbType) String() string {
	return proto.EnumName(Db_DbType_name, int32(x))
}

func (x *Db_DbType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Db_DbType_value, data, "Db_DbType")
	if err != nil {
		return err
	}
	*x = Db_DbType(value)
	return nil
}

func (Db_DbType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7e18b259edcdc2b2, []int{0, 0}
}

type Db struct {
	Name                      *string            `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	SchemaName                *string            `protobuf:"bytes,2,opt,name=schemaName" json:"schemaName,omitempty"`
	Tables                    []*Table           `protobuf:"bytes,3,rep,name=tables" json:"tables,omitempty"`
	StoredProcs               []*StoredProcedure `protobuf:"bytes,4,rep,name=storedProcs" json:"storedProcs,omitempty"`
	Views                     []*View            `protobuf:"bytes,5,rep,name=views" json:"views,omitempty"`
	Sequences                 []*Sequence        `protobuf:"bytes,6,rep,name=sequences" json:"sequences,omitempty"`
	DuplicateProcNamesAllowed *bool              `protobuf:"varint,7,opt,name=duplicateProcNamesAllowed" json:"duplicateProcNamesAllowed,omitempty"`
	Type                      *Db_DbType         `protobuf:"varint,8,req,name=type,enum=Db_DbType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}           `json:"-"`
	XXX_unrecognized          []byte             `json:"-"`
	XXX_sizecache             int32              `json:"-"`
}

func (m *Db) Reset()         { *m = Db{} }
func (m *Db) String() string { return proto.CompactTextString(m) }
func (*Db) ProtoMessage()    {}
func (*Db) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e18b259edcdc2b2, []int{0}
}

func (m *Db) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Db.Unmarshal(m, b)
}
func (m *Db) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Db.Marshal(b, m, deterministic)
}
func (m *Db) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Db.Merge(m, src)
}
func (m *Db) XXX_Size() int {
	return xxx_messageInfo_Db.Size(m)
}
func (m *Db) XXX_DiscardUnknown() {
	xxx_messageInfo_Db.DiscardUnknown(m)
}

var xxx_messageInfo_Db proto.InternalMessageInfo

func (m *Db) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Db) GetSchemaName() string {
	if m != nil && m.SchemaName != nil {
		return *m.SchemaName
	}
	return ""
}

func (m *Db) GetTables() []*Table {
	if m != nil {
		return m.Tables
	}
	return nil
}

func (m *Db) GetStoredProcs() []*StoredProcedure {
	if m != nil {
		return m.StoredProcs
	}
	return nil
}

func (m *Db) GetViews() []*View {
	if m != nil {
		return m.Views
	}
	return nil
}

func (m *Db) GetSequences() []*Sequence {
	if m != nil {
		return m.Sequences
	}
	return nil
}

func (m *Db) GetDuplicateProcNamesAllowed() bool {
	if m != nil && m.DuplicateProcNamesAllowed != nil {
		return *m.DuplicateProcNamesAllowed
	}
	return false
}

func (m *Db) GetType() Db_DbType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Db_ORACLE
}

type Table struct {
	Name                 *string       `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Columns              []*Column     `protobuf:"bytes,2,rep,name=columns" json:"columns,omitempty"`
	Triggers             []*Trigger    `protobuf:"bytes,3,rep,name=triggers" json:"triggers,omitempty"`
	Indexes              []*Index      `protobuf:"bytes,4,rep,name=indexes" json:"indexes,omitempty"`
	Constraints          []*Constraint `protobuf:"bytes,5,rep,name=constraints" json:"constraints,omitempty"`
	IsTemp               *bool         `protobuf:"varint,6,opt,name=isTemp,def=0" json:"isTemp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Table) Reset()         { *m = Table{} }
func (m *Table) String() string { return proto.CompactTextString(m) }
func (*Table) ProtoMessage()    {}
func (*Table) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e18b259edcdc2b2, []int{1}
}

func (m *Table) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Table.Unmarshal(m, b)
}
func (m *Table) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Table.Marshal(b, m, deterministic)
}
func (m *Table) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Table.Merge(m, src)
}
func (m *Table) XXX_Size() int {
	return xxx_messageInfo_Table.Size(m)
}
func (m *Table) XXX_DiscardUnknown() {
	xxx_messageInfo_Table.DiscardUnknown(m)
}

var xxx_messageInfo_Table proto.InternalMessageInfo

const Default_Table_IsTemp bool = false

func (m *Table) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Table) GetColumns() []*Column {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *Table) GetTriggers() []*Trigger {
	if m != nil {
		return m.Triggers
	}
	return nil
}

func (m *Table) GetIndexes() []*Index {
	if m != nil {
		return m.Indexes
	}
	return nil
}

func (m *Table) GetConstraints() []*Constraint {
	if m != nil {
		return m.Constraints
	}
	return nil
}

func (m *Table) GetIsTemp() bool {
	if m != nil && m.IsTemp != nil {
		return *m.IsTemp
	}
	return Default_Table_IsTemp
}

type Column struct {
	Pos                  *int32   `protobuf:"varint,1,req,name=pos" json:"pos,omitempty"`
	Name                 *string  `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Notnull              *bool    `protobuf:"varint,3,opt,name=notnull" json:"notnull,omitempty"`
	Length               *int64   `protobuf:"varint,4,opt,name=length" json:"length,omitempty"`
	Type                 *string  `protobuf:"bytes,5,req,name=type" json:"type,omitempty"`
	Precision            *int64   `protobuf:"varint,6,opt,name=precision" json:"precision,omitempty"`
	Scale                *int64   `protobuf:"varint,7,opt,name=scale" json:"scale,omitempty"`
	DefVal               *string  `protobuf:"bytes,8,opt,name=defVal" json:"defVal,omitempty"`
	TableName            *string  `protobuf:"bytes,9,req,name=tableName" json:"tableName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Column) Reset()         { *m = Column{} }
func (m *Column) String() string { return proto.CompactTextString(m) }
func (*Column) ProtoMessage()    {}
func (*Column) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e18b259edcdc2b2, []int{2}
}

func (m *Column) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Column.Unmarshal(m, b)
}
func (m *Column) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Column.Marshal(b, m, deterministic)
}
func (m *Column) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Column.Merge(m, src)
}
func (m *Column) XXX_Size() int {
	return xxx_messageInfo_Column.Size(m)
}
func (m *Column) XXX_DiscardUnknown() {
	xxx_messageInfo_Column.DiscardUnknown(m)
}

var xxx_messageInfo_Column proto.InternalMessageInfo

func (m *Column) GetPos() int32 {
	if m != nil && m.Pos != nil {
		return *m.Pos
	}
	return 0
}

func (m *Column) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Column) GetNotnull() bool {
	if m != nil && m.Notnull != nil {
		return *m.Notnull
	}
	return false
}

func (m *Column) GetLength() int64 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *Column) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Column) GetPrecision() int64 {
	if m != nil && m.Precision != nil {
		return *m.Precision
	}
	return 0
}

func (m *Column) GetScale() int64 {
	if m != nil && m.Scale != nil {
		return *m.Scale
	}
	return 0
}

func (m *Column) GetDefVal() string {
	if m != nil && m.DefVal != nil {
		return *m.DefVal
	}
	return ""
}

func (m *Column) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

type Trigger struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	TableName            *string  `protobuf:"bytes,2,req,name=tableName" json:"tableName,omitempty"`
	When                 *string  `protobuf:"bytes,3,opt,name=when" json:"when,omitempty"`
	Action               *string  `protobuf:"bytes,4,req,name=action" json:"action,omitempty"`
	Function             *string  `protobuf:"bytes,5,opt,name=function" json:"function,omitempty"`
	FunctionDef          *string  `protobuf:"bytes,6,opt,name=functionDef" json:"functionDef,omitempty"`
	Definition           *string  `protobuf:"bytes,7,opt,name=definition" json:"definition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trigger) Reset()         { *m = Trigger{} }
func (m *Trigger) String() string { return proto.CompactTextString(m) }
func (*Trigger) ProtoMessage()    {}
func (*Trigger) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e18b259edcdc2b2, []int{3}
}

func (m *Trigger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger.Unmarshal(m, b)
}
func (m *Trigger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger.Marshal(b, m, deterministic)
}
func (m *Trigger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger.Merge(m, src)
}
func (m *Trigger) XXX_Size() int {
	return xxx_messageInfo_Trigger.Size(m)
}
func (m *Trigger) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger proto.InternalMessageInfo

func (m *Trigger) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Trigger) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *Trigger) GetWhen() string {
	if m != nil && m.When != nil {
		return *m.When
	}
	return ""
}

func (m *Trigger) GetAction() string {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return ""
}

func (m *Trigger) GetFunction() string {
	if m != nil && m.Function != nil {
		return *m.Function
	}
	return ""
}

func (m *Trigger) GetFunctionDef() string {
	if m != nil && m.FunctionDef != nil {
		return *m.FunctionDef
	}
	return ""
}

func (m *Trigger) GetDefinition() string {
	if m != nil && m.Definition != nil {
		return *m.Definition
	}
	return ""
}

type Index struct {
	Name                 *string           `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	TableName            *string           `protobuf:"bytes,2,req,name=tableName" json:"tableName,omitempty"`
	Definition           *string           `protobuf:"bytes,3,opt,name=definition" json:"definition,omitempty"`
	Columns              *string           `protobuf:"bytes,4,req,name=columns" json:"columns,omitempty"`
	Props                map[string]string `protobuf:"bytes,5,rep,name=props" json:"props,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Index) Reset()         { *m = Index{} }
func (m *Index) String() string { return proto.CompactTextString(m) }
func (*Index) ProtoMessage()    {}
func (*Index) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e18b259edcdc2b2, []int{4}
}

func (m *Index) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Index.Unmarshal(m, b)
}
func (m *Index) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Index.Marshal(b, m, deterministic)
}
func (m *Index) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Index.Merge(m, src)
}
func (m *Index) XXX_Size() int {
	return xxx_messageInfo_Index.Size(m)
}
func (m *Index) XXX_DiscardUnknown() {
	xxx_messageInfo_Index.DiscardUnknown(m)
}

var xxx_messageInfo_Index proto.InternalMessageInfo

func (m *Index) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Index) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *Index) GetDefinition() string {
	if m != nil && m.Definition != nil {
		return *m.Definition
	}
	return ""
}

func (m *Index) GetColumns() string {
	if m != nil && m.Columns != nil {
		return *m.Columns
	}
	return ""
}

func (m *Index) GetProps() map[string]string {
	if m != nil {
		return m.Props
	}
	return nil
}

type Constraint struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Definition           *string  `protobuf:"bytes,2,req,name=definition" json:"definition,omitempty"`
	Type                 *string  `protobuf:"bytes,3,req,name=type" json:"type,omitempty"`
	Columns              []string `protobuf:"bytes,4,rep,name=columns" json:"columns,omitempty"`
	TableName            *string  `protobuf:"bytes,5,req,name=tableName" json:"tableName,omitempty"`
	TableView            *string  `protobuf:"bytes,6,req,name=tableView" json:"tableView,omitempty"`
	TargetTableName      *string  `protobuf:"bytes,7,opt,name=targetTableName" json:"targetTableName,omitempty"`
	TargetColumnName     *string  `protobuf:"bytes,8,opt,name=targetColumnName" json:"targetColumnName,omitempty"`
	Condition            *string  `protobuf:"bytes,9,opt,name=condition" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Constraint) Reset()         { *m = Constraint{} }
func (m *Constraint) String() string { return proto.CompactTextString(m) }
func (*Constraint) ProtoMessage()    {}
func (*Constraint) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e18b259edcdc2b2, []int{5}
}

func (m *Constraint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Constraint.Unmarshal(m, b)
}
func (m *Constraint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Constraint.Marshal(b, m, deterministic)
}
func (m *Constraint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Constraint.Merge(m, src)
}
func (m *Constraint) XXX_Size() int {
	return xxx_messageInfo_Constraint.Size(m)
}
func (m *Constraint) XXX_DiscardUnknown() {
	xxx_messageInfo_Constraint.DiscardUnknown(m)
}

var xxx_messageInfo_Constraint proto.InternalMessageInfo

func (m *Constraint) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Constraint) GetDefinition() string {
	if m != nil && m.Definition != nil {
		return *m.Definition
	}
	return ""
}

func (m *Constraint) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Constraint) GetColumns() []string {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *Constraint) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *Constraint) GetTableView() string {
	if m != nil && m.TableView != nil {
		return *m.TableView
	}
	return ""
}

func (m *Constraint) GetTargetTableName() string {
	if m != nil && m.TargetTableName != nil {
		return *m.TargetTableName
	}
	return ""
}

func (m *Constraint) GetTargetColumnName() string {
	if m != nil && m.TargetColumnName != nil {
		return *m.TargetColumnName
	}
	return ""
}

func (m *Constraint) GetCondition() string {
	if m != nil && m.Condition != nil {
		return *m.Condition
	}
	return ""
}

type StoredProcedure struct {
	Name                 *string                 `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Declaration          *string                 `protobuf:"bytes,2,opt,name=declaration" json:"declaration,omitempty"`
	DropDeclaration      *string                 `protobuf:"bytes,3,req,name=dropDeclaration" json:"dropDeclaration,omitempty"`
	Definition           *string                 `protobuf:"bytes,4,opt,name=definition" json:"definition,omitempty"`
	Params               []*StoredProcedureParam `protobuf:"bytes,5,rep,name=params" json:"params,omitempty"`
	NumParams            *int32                  `protobuf:"varint,6,req,name=numParams" json:"numParams,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *StoredProcedure) Reset()         { *m = StoredProcedure{} }
func (m *StoredProcedure) String() string { return proto.CompactTextString(m) }
func (*StoredProcedure) ProtoMessage()    {}
func (*StoredProcedure) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e18b259edcdc2b2, []int{6}
}

func (m *StoredProcedure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoredProcedure.Unmarshal(m, b)
}
func (m *StoredProcedure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoredProcedure.Marshal(b, m, deterministic)
}
func (m *StoredProcedure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoredProcedure.Merge(m, src)
}
func (m *StoredProcedure) XXX_Size() int {
	return xxx_messageInfo_StoredProcedure.Size(m)
}
func (m *StoredProcedure) XXX_DiscardUnknown() {
	xxx_messageInfo_StoredProcedure.DiscardUnknown(m)
}

var xxx_messageInfo_StoredProcedure proto.InternalMessageInfo

func (m *StoredProcedure) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *StoredProcedure) GetDeclaration() string {
	if m != nil && m.Declaration != nil {
		return *m.Declaration
	}
	return ""
}

func (m *StoredProcedure) GetDropDeclaration() string {
	if m != nil && m.DropDeclaration != nil {
		return *m.DropDeclaration
	}
	return ""
}

func (m *StoredProcedure) GetDefinition() string {
	if m != nil && m.Definition != nil {
		return *m.Definition
	}
	return ""
}

func (m *StoredProcedure) GetParams() []*StoredProcedureParam {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *StoredProcedure) GetNumParams() int32 {
	if m != nil && m.NumParams != nil {
		return *m.NumParams
	}
	return 0
}

type StoredProcedureParam struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Type                 *string  `protobuf:"bytes,2,req,name=type" json:"type,omitempty"`
	Mode                 *string  `protobuf:"bytes,3,req,name=mode" json:"mode,omitempty"`
	Position             *int32   `protobuf:"varint,4,req,name=position" json:"position,omitempty"`
	DefVal               *string  `protobuf:"bytes,5,opt,name=defVal" json:"defVal,omitempty"`
	ProcName             *string  `protobuf:"bytes,6,opt,name=procName" json:"procName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoredProcedureParam) Reset()         { *m = StoredProcedureParam{} }
func (m *StoredProcedureParam) String() string { return proto.CompactTextString(m) }
func (*StoredProcedureParam) ProtoMessage()    {}
func (*StoredProcedureParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e18b259edcdc2b2, []int{7}
}

func (m *StoredProcedureParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoredProcedureParam.Unmarshal(m, b)
}
func (m *StoredProcedureParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoredProcedureParam.Marshal(b, m, deterministic)
}
func (m *StoredProcedureParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoredProcedureParam.Merge(m, src)
}
func (m *StoredProcedureParam) XXX_Size() int {
	return xxx_messageInfo_StoredProcedureParam.Size(m)
}
func (m *StoredProcedureParam) XXX_DiscardUnknown() {
	xxx_messageInfo_StoredProcedureParam.DiscardUnknown(m)
}

var xxx_messageInfo_StoredProcedureParam proto.InternalMessageInfo

func (m *StoredProcedureParam) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *StoredProcedureParam) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *StoredProcedureParam) GetMode() string {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return ""
}

func (m *StoredProcedureParam) GetPosition() int32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *StoredProcedureParam) GetDefVal() string {
	if m != nil && m.DefVal != nil {
		return *m.DefVal
	}
	return ""
}

func (m *StoredProcedureParam) GetProcName() string {
	if m != nil && m.ProcName != nil {
		return *m.ProcName
	}
	return ""
}

type View struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Type                 *string  `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Definition           *string  `protobuf:"bytes,3,req,name=definition" json:"definition,omitempty"`
	Weight               *int32   `protobuf:"varint,4,opt,name=weight,def=0" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *View) Reset()         { *m = View{} }
func (m *View) String() string { return proto.CompactTextString(m) }
func (*View) ProtoMessage()    {}
func (*View) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e18b259edcdc2b2, []int{8}
}

func (m *View) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_View.Unmarshal(m, b)
}
func (m *View) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_View.Marshal(b, m, deterministic)
}
func (m *View) XXX_Merge(src proto.Message) {
	xxx_messageInfo_View.Merge(m, src)
}
func (m *View) XXX_Size() int {
	return xxx_messageInfo_View.Size(m)
}
func (m *View) XXX_DiscardUnknown() {
	xxx_messageInfo_View.DiscardUnknown(m)
}

var xxx_messageInfo_View proto.InternalMessageInfo

const Default_View_Weight int32 = 0

func (m *View) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *View) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *View) GetDefinition() string {
	if m != nil && m.Definition != nil {
		return *m.Definition
	}
	return ""
}

func (m *View) GetWeight() int32 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return Default_View_Weight
}

type Sequence struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	DefVal               *string  `protobuf:"bytes,2,opt,name=defVal" json:"defVal,omitempty"`
	Cycle                *string  `protobuf:"bytes,3,opt,name=cycle" json:"cycle,omitempty"`
	Min                  *string  `protobuf:"bytes,4,opt,name=min" json:"min,omitempty"`
	Max                  *string  `protobuf:"bytes,5,opt,name=max" json:"max,omitempty"`
	Inc                  *string  `protobuf:"bytes,6,opt,name=inc" json:"inc,omitempty"`
	Cache                *string  `protobuf:"bytes,7,opt,name=cache" json:"cache,omitempty"`
	Order                *string  `protobuf:"bytes,8,opt,name=order" json:"order,omitempty"`
	Type                 *string  `protobuf:"bytes,9,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sequence) Reset()         { *m = Sequence{} }
func (m *Sequence) String() string { return proto.CompactTextString(m) }
func (*Sequence) ProtoMessage()    {}
func (*Sequence) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e18b259edcdc2b2, []int{9}
}

func (m *Sequence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sequence.Unmarshal(m, b)
}
func (m *Sequence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sequence.Marshal(b, m, deterministic)
}
func (m *Sequence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sequence.Merge(m, src)
}
func (m *Sequence) XXX_Size() int {
	return xxx_messageInfo_Sequence.Size(m)
}
func (m *Sequence) XXX_DiscardUnknown() {
	xxx_messageInfo_Sequence.DiscardUnknown(m)
}

var xxx_messageInfo_Sequence proto.InternalMessageInfo

func (m *Sequence) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Sequence) GetDefVal() string {
	if m != nil && m.DefVal != nil {
		return *m.DefVal
	}
	return ""
}

func (m *Sequence) GetCycle() string {
	if m != nil && m.Cycle != nil {
		return *m.Cycle
	}
	return ""
}

func (m *Sequence) GetMin() string {
	if m != nil && m.Min != nil {
		return *m.Min
	}
	return ""
}

func (m *Sequence) GetMax() string {
	if m != nil && m.Max != nil {
		return *m.Max
	}
	return ""
}

func (m *Sequence) GetInc() string {
	if m != nil && m.Inc != nil {
		return *m.Inc
	}
	return ""
}

func (m *Sequence) GetCache() string {
	if m != nil && m.Cache != nil {
		return *m.Cache
	}
	return ""
}

func (m *Sequence) GetOrder() string {
	if m != nil && m.Order != nil {
		return *m.Order
	}
	return ""
}

func (m *Sequence) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func init() {
	proto.RegisterEnum("Db_DbType", Db_DbType_name, Db_DbType_value)
	proto.RegisterType((*Db)(nil), "Db")
	proto.RegisterType((*Table)(nil), "Table")
	proto.RegisterType((*Column)(nil), "Column")
	proto.RegisterType((*Trigger)(nil), "Trigger")
	proto.RegisterType((*Index)(nil), "Index")
	proto.RegisterMapType((map[string]string)(nil), "Index.PropsEntry")
	proto.RegisterType((*Constraint)(nil), "Constraint")
	proto.RegisterType((*StoredProcedure)(nil), "StoredProcedure")
	proto.RegisterType((*StoredProcedureParam)(nil), "StoredProcedureParam")
	proto.RegisterType((*View)(nil), "View")
	proto.RegisterType((*Sequence)(nil), "Sequence")
}

func init() { proto.RegisterFile("differ.proto", fileDescriptor_7e18b259edcdc2b2) }

var fileDescriptor_7e18b259edcdc2b2 = []byte{
	// 952 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x51, 0x8f, 0xdb, 0x44,
	0x10, 0xc6, 0x76, 0xec, 0xc4, 0x93, 0xd2, 0x86, 0xd5, 0x81, 0xdc, 0x02, 0xa7, 0x60, 0x21, 0x35,
	0x42, 0xaa, 0x85, 0xee, 0xa9, 0x3a, 0x21, 0xa4, 0x72, 0x89, 0x10, 0xd2, 0x41, 0xd3, 0x4d, 0x74,
	0x12, 0xbc, 0x20, 0xc7, 0x9e, 0x24, 0x16, 0x8e, 0x6d, 0x6c, 0xa7, 0x69, 0xfe, 0x0c, 0x0f, 0xfc,
	0x14, 0x24, 0xfe, 0x01, 0xe2, 0x91, 0xdf, 0xc0, 0x4f, 0x40, 0xb3, 0xeb, 0xb5, 0x1d, 0x37, 0xc7,
	0x43, 0xdf, 0x66, 0xbe, 0x99, 0x5d, 0xcf, 0x37, 0xf3, 0xcd, 0x26, 0xf0, 0x20, 0x8c, 0xd6, 0x6b,
	0xcc, 0xbd, 0x2c, 0x4f, 0xcb, 0xd4, 0xfd, 0x57, 0x07, 0x7d, 0xba, 0x62, 0x0c, 0x7a, 0x89, 0xbf,
	0x43, 0x47, 0x1b, 0xeb, 0x13, 0x9b, 0x0b, 0x9b, 0x5d, 0x02, 0x14, 0xc1, 0x16, 0x77, 0xfe, 0x0f,
	0x14, 0xd1, 0xc7, 0xda, 0xc4, 0xe6, 0x2d, 0x84, 0x5d, 0x82, 0x55, 0xfa, 0xab, 0x18, 0x0b, 0xc7,
	0x18, 0x1b, 0x93, 0xe1, 0x95, 0xe5, 0x2d, 0xc9, 0xe5, 0x15, 0xca, 0xae, 0x60, 0x58, 0x94, 0x69,
	0x8e, 0xe1, 0x3c, 0x4f, 0x83, 0xc2, 0xe9, 0x89, 0xa4, 0x91, 0xb7, 0xa8, 0x31, 0x0c, 0xf7, 0x39,
	0xf2, 0x76, 0x12, 0xfb, 0x18, 0xcc, 0xd7, 0x11, 0x1e, 0x0a, 0xc7, 0x14, 0xd9, 0xa6, 0x77, 0x17,
	0xe1, 0x81, 0x4b, 0x8c, 0x3d, 0x05, 0xbb, 0xc0, 0x5f, 0xf7, 0x98, 0x04, 0x58, 0x38, 0x96, 0x48,
	0xb0, 0xbd, 0x45, 0x85, 0xf0, 0x26, 0xc6, 0xbe, 0x82, 0xc7, 0xe1, 0x3e, 0x8b, 0xa3, 0xc0, 0x2f,
	0x91, 0xee, 0xa5, 0x72, 0x8b, 0x17, 0x71, 0x9c, 0x1e, 0x30, 0x74, 0xfa, 0x63, 0x6d, 0x32, 0xe0,
	0xf7, 0x27, 0xb0, 0x4b, 0xe8, 0x95, 0xc7, 0x0c, 0x9d, 0xc1, 0x58, 0x9f, 0x3c, 0xbc, 0x02, 0x6f,
	0xba, 0xf2, 0xa6, 0xab, 0xe5, 0x31, 0x43, 0x2e, 0x70, 0xf7, 0x6b, 0xb0, 0xa4, 0xcf, 0x00, 0xac,
	0x97, 0xfc, 0xc5, 0xcd, 0xed, 0x6c, 0xf4, 0x1e, 0x7b, 0x08, 0x30, 0x7f, 0xb9, 0x58, 0x7e, 0xcb,
	0x67, 0x8b, 0x57, 0xb7, 0x23, 0x8d, 0xbd, 0x0f, 0xf6, 0xe2, 0xd5, 0xed, 0x62, 0xc6, 0xef, 0x66,
	0x7c, 0xa4, 0x33, 0x1b, 0xcc, 0xef, 0x7f, 0xa4, 0x88, 0xe1, 0xfe, 0xa5, 0x81, 0x29, 0x3a, 0x75,
	0xb6, 0xeb, 0x9f, 0x41, 0x3f, 0x48, 0xe3, 0xfd, 0x2e, 0x29, 0x1c, 0x5d, 0x50, 0xec, 0x7b, 0x37,
	0xc2, 0xe7, 0x0a, 0x67, 0x9f, 0xc3, 0xa0, 0xcc, 0xa3, 0xcd, 0x06, 0x73, 0xd5, 0xfa, 0x81, 0xb7,
	0x94, 0x00, 0xaf, 0x23, 0x6c, 0x0c, 0xfd, 0x28, 0x09, 0xf1, 0x0d, 0xaa, 0xd6, 0x5b, 0xde, 0x77,
	0xe4, 0x73, 0x05, 0xb3, 0x67, 0x30, 0x0c, 0xd2, 0xa4, 0x28, 0x73, 0x3f, 0x4a, 0x4a, 0xd5, 0xf2,
	0xa1, 0x77, 0x53, 0x63, 0xbc, 0x1d, 0x67, 0x9f, 0x82, 0x15, 0x15, 0x4b, 0xdc, 0x65, 0x8e, 0x45,
	0x2d, 0xbc, 0x36, 0xd7, 0x7e, 0x5c, 0x20, 0xaf, 0x40, 0xf7, 0x1f, 0x0d, 0x2c, 0x59, 0x29, 0x1b,
	0x81, 0x91, 0xa5, 0x85, 0xa0, 0x65, 0x72, 0x32, 0x6b, 0xa6, 0x7a, 0x8b, 0xa9, 0x03, 0xfd, 0x24,
	0x2d, 0x93, 0x7d, 0x1c, 0x3b, 0x86, 0x98, 0x89, 0x72, 0xd9, 0x47, 0x60, 0xc5, 0x98, 0x6c, 0xca,
	0xad, 0xd3, 0x1b, 0x6b, 0x13, 0x83, 0x57, 0x1e, 0xdd, 0x22, 0x26, 0x63, 0xca, 0x5b, 0xc8, 0x66,
	0x9f, 0x80, 0x9d, 0xe5, 0x18, 0x44, 0x45, 0x94, 0x26, 0xa2, 0x30, 0x83, 0x37, 0x00, 0xbb, 0x00,
	0xb3, 0x08, 0xfc, 0x18, 0xc5, 0xd4, 0x0d, 0x2e, 0x1d, 0xba, 0x3f, 0xc4, 0xf5, 0x9d, 0x1f, 0x3b,
	0x03, 0xa1, 0xea, 0xca, 0xa3, 0xbb, 0x84, 0x76, 0x85, 0xe0, 0x6d, 0xf1, 0x91, 0x06, 0x70, 0xff,
	0xd4, 0xa0, 0x5f, 0xb5, 0xf9, 0xec, 0xe4, 0x4e, 0x4e, 0xeb, 0x9d, 0xd3, 0x74, 0xe2, 0xb0, 0xc5,
	0x44, 0x50, 0xb5, 0xb9, 0xb0, 0xa9, 0x0e, 0x3f, 0x28, 0xa9, 0xf0, 0x9e, 0x48, 0xaf, 0x3c, 0xf6,
	0x04, 0x06, 0xeb, 0x7d, 0x22, 0x23, 0xa6, 0xc8, 0xaf, 0x7d, 0x36, 0x86, 0xa1, 0xb2, 0xa7, 0xb8,
	0x16, 0x8c, 0x6d, 0xde, 0x86, 0x68, 0x6f, 0x43, 0x5c, 0x47, 0x49, 0x24, 0xce, 0xf7, 0xe5, 0xde,
	0x36, 0x88, 0xfb, 0xb7, 0x06, 0xa6, 0x50, 0xc2, 0x3b, 0xb0, 0x38, 0xbd, 0xdb, 0xe8, 0xde, 0x4d,
	0x33, 0x55, 0xea, 0x95, 0x94, 0x6a, 0xd1, 0x3e, 0x05, 0x33, 0xcb, 0xd3, 0x4c, 0xc9, 0xec, 0x03,
	0x29, 0x46, 0x6f, 0x4e, 0xd8, 0x2c, 0x29, 0xf3, 0x23, 0x97, 0xf1, 0x27, 0xcf, 0x01, 0x1a, 0x90,
	0xa4, 0xf4, 0x0b, 0x1e, 0x1d, 0x4d, 0x7c, 0x89, 0x4c, 0x1a, 0xe9, 0x6b, 0x3f, 0xde, 0xab, 0x17,
	0x49, 0x3a, 0xd7, 0xfa, 0x73, 0xcd, 0xfd, 0x4d, 0x07, 0x68, 0xc4, 0x7b, 0xdf, 0x9b, 0xd6, 0xaa,
	0x5f, 0xd2, 0x6b, 0xd7, 0xaf, 0x14, 0x66, 0xb4, 0x14, 0x76, 0xc2, 0xc9, 0x68, 0x73, 0x3a, 0xe9,
	0x95, 0xd9, 0xed, 0x95, 0x8a, 0xd2, 0x13, 0xe6, 0x58, 0xad, 0x28, 0x01, 0x6c, 0x02, 0x8f, 0x4a,
	0x3f, 0xdf, 0x60, 0xb9, 0xac, 0x6f, 0x90, 0xa3, 0xea, 0xc2, 0xec, 0x0b, 0x18, 0x49, 0x48, 0x6e,
	0x97, 0x48, 0x95, 0xba, 0x7d, 0x0b, 0xa7, 0x6f, 0x06, 0x69, 0x12, 0x4a, 0x7a, 0xb6, 0x48, 0x6a,
	0x00, 0x5a, 0xd1, 0x47, 0x9d, 0xe7, 0xf7, 0x6c, 0x97, 0xc6, 0x30, 0x0c, 0x31, 0x88, 0xfd, 0xdc,
	0xaf, 0xda, 0x24, 0x34, 0xd6, 0x82, 0xa8, 0xfa, 0x30, 0x4f, 0xb3, 0x69, 0x2b, 0x4b, 0xb6, 0xac,
	0x0b, 0x77, 0x3a, 0xde, 0x7b, 0x4b, 0x31, 0xcf, 0xc0, 0xca, 0xfc, 0xdc, 0xdf, 0x29, 0x61, 0x7c,
	0xd8, 0xfd, 0x81, 0x98, 0x53, 0x94, 0x57, 0x49, 0x44, 0x30, 0xd9, 0xef, 0xe6, 0xf2, 0x84, 0x25,
	0x1e, 0x98, 0x06, 0x70, 0x7f, 0xd7, 0xe0, 0xe2, 0xdc, 0xf1, 0xb3, 0x2c, 0xd5, 0xac, 0xf5, 0xd6,
	0xac, 0x19, 0xf4, 0x76, 0x69, 0x58, 0xcf, 0x9f, 0x6c, 0xda, 0xc6, 0x2c, 0x2d, 0xa2, 0x7a, 0x4f,
	0x4d, 0x5e, 0xfb, 0xad, 0x97, 0xc4, 0x3c, 0x79, 0x49, 0xe8, 0x4c, 0xf5, 0xbb, 0x52, 0xad, 0x68,
	0xed, 0xbb, 0x11, 0xf4, 0x84, 0x02, 0xfe, 0xbf, 0x26, 0xad, 0xae, 0xa9, 0xbb, 0x73, 0x5d, 0xcd,
	0x3e, 0x06, 0xeb, 0x80, 0xd1, 0x66, 0x5b, 0x8a, 0xee, 0x9a, 0xd7, 0xda, 0x97, 0xbc, 0x02, 0xdc,
	0x3f, 0x34, 0x18, 0xa8, 0x1f, 0xc8, 0xb3, 0xdf, 0x6b, 0xea, 0xd7, 0x4f, 0xea, 0xbf, 0x00, 0x33,
	0x38, 0x06, 0x31, 0x56, 0x2b, 0x2e, 0x1d, 0x5a, 0xc6, 0x5d, 0xa4, 0x86, 0x48, 0xa6, 0x40, 0xfc,
	0x37, 0x15, 0x79, 0x32, 0x09, 0x89, 0x92, 0xa0, 0x22, 0x4d, 0xa6, 0xb8, 0xcb, 0x0f, 0xb6, 0x4a,
	0xdf, 0xd2, 0x21, 0x34, 0xcd, 0x43, 0xcc, 0x2b, 0x29, 0x4b, 0xa7, 0xe6, 0x6f, 0x37, 0xfc, 0xbf,
	0x79, 0xf0, 0x13, 0xc8, 0xbf, 0x2c, 0x3f, 0x67, 0xab, 0xab, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x3d, 0x88, 0x43, 0x3a, 0xbf, 0x08, 0x00, 0x00,
}
